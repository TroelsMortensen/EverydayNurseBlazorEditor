@namespace EN2Editor.Pages.Nodes

@using EN2Editor.Model.Selection
@using EN2Editor.Model

@inject SelectionManager selectionManager
@inject IJSRuntime jsRuntime

<div class="node" style="left: @(NodeModel.X)px; top: @(NodeModel.Y)px">
    <div class="default-node">
        <div class="node-component-container">
            <!-- This container holds all the components of a specific Node type -->
            <h4 class="node-header @ColorStyle"
                @onmousedown="OnMouseDown"
                @onmousedown:stopPropagation="true">
                @Header
                <i class="delete-node-button" @onclick="OnDeleteClicked">&#10008;</i>
            </h4>
            @ChildContent
        </div>
    </div>
</div>


@code {

    [Parameter]
    public EventCallback<NodeModelBase> OnDeleteEvent { get; set; }

    [Parameter]
    public string Header { get; set; }

    [Parameter]
    public NodeModelBase NodeModel { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string ColorStyle { get; set; }
    
    private double lastClientX, lastClientY;
    private double initX, initY;

    private void OnMouseDown(MouseEventArgs e) {
        
        selectionManager.GrabbedNode = NodeModel;
        selectionManager.InitialX = NodeModel.X;
        selectionManager.InitialY = NodeModel.Y;
        selectionManager.LastX = e.ClientX;
        selectionManager.LastY = e.ClientY;
    }

    private void OnDeleteClicked() {
        Console.WriteLine("delete node");
        OnDeleteEvent.InvokeAsync(NodeModel);
    }

}