@using EN2Editor.Model.Selection
@using Models
@using EN2Editor.Model
@namespace NodeComponents
@inject SelectionManager selectionManager
@inject NodeModelManager nodeModelManager
@inject IJSRuntime jsRuntime

<div>
    <img src="Icons/TransitionPoint.png" height="16px" style="float:right; margin-right: 2px; cursor:pointer"
         @onmousedown="OnMouseDown"
         draggable="false"/>
</div>

@code {
    
    [Parameter]
    public NodeModelBase Node { get; set; }

    private async Task OnMouseDown(MouseEventArgs evt) {
        
        Rectangle rect = await jsRuntime.InvokeAsync<Rectangle>("helpers.getBoundingClientRectangle", "CanvasID");
        double x = (evt.ClientX - Node.X - rect.Left);
        double y = (evt.ClientY - Node.Y - rect.Top);
        LinkModel linkModel = new LinkModel {
            OffsetToSourceNodeX = x,
            OffsetToSourceNodeY = y,
            OffsetToCanvasX = rect.Left,
            OffsetToCanvasY = rect.Top,
            SourceNode = Node
        };
        nodeModelManager.Links.Add(linkModel);

        selectionManager.DraggedLink = linkModel;
        selectionManager.InitialX = evt.ClientX;
        selectionManager.InitialY = evt.ClientY;
        selectionManager.LastX = evt.ClientX;
        selectionManager.LastY = evt.ClientY;
    }

}