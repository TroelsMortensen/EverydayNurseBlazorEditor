@namespace EN2Editor.Pages.NodeComponents

@using EN2Editor.Model.Selection
@using Models
@using Models.Components
@using EN2Editor.Model

@inject SelectionManager selectionManager
@inject IJSRuntime jsRuntime
@inject DiagramManager diagramManager

<div>
    <img src="Icons/TransitionPoint.png" height="16px" style="float:left; margin-left: 2px; cursor:pointer; pointer-events:auto"
         @onmouseup="OnMouseUp"
         draggable="false"/>
</div>

@code {

   /* [Parameter]
    public NodeModelBase Node { get; set; }*/

    [Parameter]
    public TransitionEndModel tem { get; set; }
    
    private async Task OnMouseUp(MouseEventArgs evt) {
        Console.WriteLine("End up");
        LinkModel linkModel = selectionManager.DraggedLink;
        selectionManager.DraggedLink = null;
        if (linkModel == null) return;

        Rectangle rect = await jsRuntime.InvokeAsync<Rectangle>("helpers.getBoundingClientRectangle", "CanvasID");
        double x = (evt.ClientX - tem.OffsetToNodeX - rect.Left - diagramManager.PanX);
        double y = (evt.ClientY - tem.OffsetToNodeY - rect.Top - diagramManager.PanY);

        linkModel.TransitionEndModel = tem;
        linkModel.OffsetToEndX = x;
        linkModel.OffsetToEndY = y;
        linkModel.IsEndConnected = true;
        /*linkModel.SourceNode.OutgoingLinks.Add(linkModel);
        linkModel.TargetNode.IncomingLinks.Add(linkModel);*/
    }

}